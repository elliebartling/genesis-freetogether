'use strict';

function once(fn) {
    var called = false;
    return function () {
        if (!called) {
            called = true;
            return fn.apply(undefined, arguments);
        }
    };
}

function memory() {
    var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    if (typeof opts.contents !== 'string' && !(opts.contents instanceof Buffer)) {
        throw Error(['rollup-plugin-memory', 'opts.contents should be string or buffer instance'].join(': '));
    }

    var contents = opts.contents.toString();
    var path = typeof opts.path === 'string' ? opts.path : false;

    return {
        resolveId: once(function (id) {
            return path || id;
        }),
        load: once(function () {
            return contents;
        })
    };
}

module.exports = memory;